package ${package}.${moduleName}.enums;
import lombok.AllArgsConstructor;

/**
 * ${comments}
 *
 * @author ${author}
 * @date ${datetime}
 */
@AllArgsConstructor
public enum ${enumName}Enum {

    #foreach ($en in $enums)
        $en.englishName ("$en.value","$en.chineseName"),
    #end

@EnumValue
private  Integer value;
@JsonValue
private  String name;


 ${enumName}Enum(Integer code, String name) {
        this.value = code;
        this.name = name;
}

public static ${enumName}Enum of(Integer value) {
        return Arrays.stream(${enumName}Enum.values())
        .filter(e->e.getValue().equals(value))
        .findAny().orElse(null);
}

/**
 * 判断值是否在枚举中存在
 * @param value
 * @return
 */
public static boolean exist(Integer value){
        return Arrays.stream(${enumName}Enum.values())
        .filter(e->e.getValue().equals(value))
        .findAny().map(e->{ return true;})
        .orElse(false);
 }



public Integer getValue() {
        return this.value;
}

public String getName() {
        return this.name;
 }

]